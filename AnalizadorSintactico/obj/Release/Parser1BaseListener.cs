//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\USUARIO1\Desktop\MiniCSharp-Parte1\AnalizadorSintactico\Parser1.g4 by ANTLR 4.5-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AnalizadorSintactico {

using System;


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IParser1Listener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class Parser1BaseListener : IParser1Listener {
	/// <summary>
	/// Enter a parse tree produced by the <c>classDeclAST</c>
	/// labeled alternative in <see cref="Parser1.classDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassDeclAST([NotNull] Parser1.ClassDeclASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>classDeclAST</c>
	/// labeled alternative in <see cref="Parser1.classDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassDeclAST([NotNull] Parser1.ClassDeclASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>sumaAddopAST</c>
	/// labeled alternative in <see cref="Parser1.addop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSumaAddopAST([NotNull] Parser1.SumaAddopASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>sumaAddopAST</c>
	/// labeled alternative in <see cref="Parser1.addop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSumaAddopAST([NotNull] Parser1.SumaAddopASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>restaAddopAST</c>
	/// labeled alternative in <see cref="Parser1.addop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRestaAddopAST([NotNull] Parser1.RestaAddopASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>restaAddopAST</c>
	/// labeled alternative in <see cref="Parser1.addop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRestaAddopAST([NotNull] Parser1.RestaAddopASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>condTermAST</c>
	/// labeled alternative in <see cref="Parser1.condTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondTermAST([NotNull] Parser1.CondTermASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>condTermAST</c>
	/// labeled alternative in <see cref="Parser1.condTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondTermAST([NotNull] Parser1.CondTermASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>constDeclAST</c>
	/// labeled alternative in <see cref="Parser1.constDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstDeclAST([NotNull] Parser1.ConstDeclASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>constDeclAST</c>
	/// labeled alternative in <see cref="Parser1.constDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstDeclAST([NotNull] Parser1.ConstDeclASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>programAST</c>
	/// labeled alternative in <see cref="Parser1.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgramAST([NotNull] Parser1.ProgramASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>programAST</c>
	/// labeled alternative in <see cref="Parser1.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgramAST([NotNull] Parser1.ProgramASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>methodDeclAST</c>
	/// labeled alternative in <see cref="Parser1.methodDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDeclAST([NotNull] Parser1.MethodDeclASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>methodDeclAST</c>
	/// labeled alternative in <see cref="Parser1.methodDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDeclAST([NotNull] Parser1.MethodDeclASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>typeAST</c>
	/// labeled alternative in <see cref="Parser1.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeAST([NotNull] Parser1.TypeASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>typeAST</c>
	/// labeled alternative in <see cref="Parser1.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeAST([NotNull] Parser1.TypeASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>mayorigualRelopAST</c>
	/// labeled alternative in <see cref="Parser1.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMayorigualRelopAST([NotNull] Parser1.MayorigualRelopASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>mayorigualRelopAST</c>
	/// labeled alternative in <see cref="Parser1.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMayorigualRelopAST([NotNull] Parser1.MayorigualRelopASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>mayorRelopAST</c>
	/// labeled alternative in <see cref="Parser1.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMayorRelopAST([NotNull] Parser1.MayorRelopASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>mayorRelopAST</c>
	/// labeled alternative in <see cref="Parser1.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMayorRelopAST([NotNull] Parser1.MayorRelopASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>menorRelopAST</c>
	/// labeled alternative in <see cref="Parser1.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMenorRelopAST([NotNull] Parser1.MenorRelopASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>menorRelopAST</c>
	/// labeled alternative in <see cref="Parser1.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMenorRelopAST([NotNull] Parser1.MenorRelopASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>diferenteRelopAST</c>
	/// labeled alternative in <see cref="Parser1.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDiferenteRelopAST([NotNull] Parser1.DiferenteRelopASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>diferenteRelopAST</c>
	/// labeled alternative in <see cref="Parser1.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDiferenteRelopAST([NotNull] Parser1.DiferenteRelopASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>menorigualRelopAST</c>
	/// labeled alternative in <see cref="Parser1.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMenorigualRelopAST([NotNull] Parser1.MenorigualRelopASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>menorigualRelopAST</c>
	/// labeled alternative in <see cref="Parser1.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMenorigualRelopAST([NotNull] Parser1.MenorigualRelopASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>comparacionRelopAST</c>
	/// labeled alternative in <see cref="Parser1.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparacionRelopAST([NotNull] Parser1.ComparacionRelopASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>comparacionRelopAST</c>
	/// labeled alternative in <see cref="Parser1.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparacionRelopAST([NotNull] Parser1.ComparacionRelopASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>formParsAST</c>
	/// labeled alternative in <see cref="Parser1.formPars"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormParsAST([NotNull] Parser1.FormParsASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>formParsAST</c>
	/// labeled alternative in <see cref="Parser1.formPars"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormParsAST([NotNull] Parser1.FormParsASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>actParsAST</c>
	/// labeled alternative in <see cref="Parser1.actPars"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterActParsAST([NotNull] Parser1.ActParsASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>actParsAST</c>
	/// labeled alternative in <see cref="Parser1.actPars"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitActParsAST([NotNull] Parser1.ActParsASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>designatorAST</c>
	/// labeled alternative in <see cref="Parser1.designator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDesignatorAST([NotNull] Parser1.DesignatorASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>designatorAST</c>
	/// labeled alternative in <see cref="Parser1.designator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDesignatorAST([NotNull] Parser1.DesignatorASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>condFactAST</c>
	/// labeled alternative in <see cref="Parser1.condFact"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondFactAST([NotNull] Parser1.CondFactASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>condFactAST</c>
	/// labeled alternative in <see cref="Parser1.condFact"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondFactAST([NotNull] Parser1.CondFactASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>conditionAST</c>
	/// labeled alternative in <see cref="Parser1.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionAST([NotNull] Parser1.ConditionASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>conditionAST</c>
	/// labeled alternative in <see cref="Parser1.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionAST([NotNull] Parser1.ConditionASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>divMulopAST</c>
	/// labeled alternative in <see cref="Parser1.mulop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDivMulopAST([NotNull] Parser1.DivMulopASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>divMulopAST</c>
	/// labeled alternative in <see cref="Parser1.mulop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDivMulopAST([NotNull] Parser1.DivMulopASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>divmodMulopAST</c>
	/// labeled alternative in <see cref="Parser1.mulop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDivmodMulopAST([NotNull] Parser1.DivmodMulopASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>divmodMulopAST</c>
	/// labeled alternative in <see cref="Parser1.mulop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDivmodMulopAST([NotNull] Parser1.DivmodMulopASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>mulMulopAST</c>
	/// labeled alternative in <see cref="Parser1.mulop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMulMulopAST([NotNull] Parser1.MulMulopASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>mulMulopAST</c>
	/// labeled alternative in <see cref="Parser1.mulop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMulMulopAST([NotNull] Parser1.MulMulopASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>readStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReadStatAST([NotNull] Parser1.ReadStatASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>readStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReadStatAST([NotNull] Parser1.ReadStatASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>returnStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatAST([NotNull] Parser1.ReturnStatASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>returnStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatAST([NotNull] Parser1.ReturnStatASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>pyStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPyStatAST([NotNull] Parser1.PyStatASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>pyStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPyStatAST([NotNull] Parser1.PyStatASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>whileStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatAST([NotNull] Parser1.WhileStatASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>whileStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatAST([NotNull] Parser1.WhileStatASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>writeStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWriteStatAST([NotNull] Parser1.WriteStatASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>writeStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWriteStatAST([NotNull] Parser1.WriteStatASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>foreachStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForeachStatAST([NotNull] Parser1.ForeachStatASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>foreachStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForeachStatAST([NotNull] Parser1.ForeachStatASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>designatorStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDesignatorStatAST([NotNull] Parser1.DesignatorStatASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>designatorStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDesignatorStatAST([NotNull] Parser1.DesignatorStatASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>ifStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatAST([NotNull] Parser1.IfStatASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ifStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatAST([NotNull] Parser1.IfStatASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>forStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatAST([NotNull] Parser1.ForStatASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>forStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatAST([NotNull] Parser1.ForStatASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>blockStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockStatAST([NotNull] Parser1.BlockStatASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>blockStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockStatAST([NotNull] Parser1.BlockStatASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>breakStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakStatAST([NotNull] Parser1.BreakStatASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>breakStatAST</c>
	/// labeled alternative in <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakStatAST([NotNull] Parser1.BreakStatASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>blockAST</c>
	/// labeled alternative in <see cref="Parser1.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockAST([NotNull] Parser1.BlockASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>blockAST</c>
	/// labeled alternative in <see cref="Parser1.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockAST([NotNull] Parser1.BlockASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>exprAST</c>
	/// labeled alternative in <see cref="Parser1.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprAST([NotNull] Parser1.ExprASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>exprAST</c>
	/// labeled alternative in <see cref="Parser1.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprAST([NotNull] Parser1.ExprASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>termAST</c>
	/// labeled alternative in <see cref="Parser1.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTermAST([NotNull] Parser1.TermASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>termAST</c>
	/// labeled alternative in <see cref="Parser1.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTermAST([NotNull] Parser1.TermASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>exprFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprFactorAST([NotNull] Parser1.ExprFactorASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>exprFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprFactorAST([NotNull] Parser1.ExprFactorASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>truefalseFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTruefalseFactorAST([NotNull] Parser1.TruefalseFactorASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>truefalseFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTruefalseFactorAST([NotNull] Parser1.TruefalseFactorASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>newFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNewFactorAST([NotNull] Parser1.NewFactorASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>newFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNewFactorAST([NotNull] Parser1.NewFactorASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>designatorFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDesignatorFactorAST([NotNull] Parser1.DesignatorFactorASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>designatorFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDesignatorFactorAST([NotNull] Parser1.DesignatorFactorASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>floatFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloatFactorAST([NotNull] Parser1.FloatFactorASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>floatFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloatFactorAST([NotNull] Parser1.FloatFactorASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>numberFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberFactorAST([NotNull] Parser1.NumberFactorASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numberFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberFactorAST([NotNull] Parser1.NumberFactorASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>charconstFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCharconstFactorAST([NotNull] Parser1.CharconstFactorASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>charconstFactorAST</c>
	/// labeled alternative in <see cref="Parser1.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCharconstFactorAST([NotNull] Parser1.CharconstFactorASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>varDeclAST</c>
	/// labeled alternative in <see cref="Parser1.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDeclAST([NotNull] Parser1.VarDeclASTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>varDeclAST</c>
	/// labeled alternative in <see cref="Parser1.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDeclAST([NotNull] Parser1.VarDeclASTContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] Parser1.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] Parser1.ProgramContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.constDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstDecl([NotNull] Parser1.ConstDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.constDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstDecl([NotNull] Parser1.ConstDeclContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDecl([NotNull] Parser1.VarDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDecl([NotNull] Parser1.VarDeclContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.classDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassDecl([NotNull] Parser1.ClassDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.classDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassDecl([NotNull] Parser1.ClassDeclContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.methodDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDecl([NotNull] Parser1.MethodDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.methodDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDecl([NotNull] Parser1.MethodDeclContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.formPars"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormPars([NotNull] Parser1.FormParsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.formPars"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormPars([NotNull] Parser1.FormParsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] Parser1.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] Parser1.TypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] Parser1.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] Parser1.StatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] Parser1.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] Parser1.BlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.actPars"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterActPars([NotNull] Parser1.ActParsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.actPars"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitActPars([NotNull] Parser1.ActParsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondition([NotNull] Parser1.ConditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondition([NotNull] Parser1.ConditionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.condTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondTerm([NotNull] Parser1.CondTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.condTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondTerm([NotNull] Parser1.CondTermContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.condFact"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondFact([NotNull] Parser1.CondFactContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.condFact"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondFact([NotNull] Parser1.CondFactContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] Parser1.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] Parser1.ExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerm([NotNull] Parser1.TermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerm([NotNull] Parser1.TermContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactor([NotNull] Parser1.FactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactor([NotNull] Parser1.FactorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.designator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDesignator([NotNull] Parser1.DesignatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.designator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDesignator([NotNull] Parser1.DesignatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelop([NotNull] Parser1.RelopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelop([NotNull] Parser1.RelopContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.addop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddop([NotNull] Parser1.AddopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.addop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddop([NotNull] Parser1.AddopContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="Parser1.mulop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMulop([NotNull] Parser1.MulopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="Parser1.mulop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMulop([NotNull] Parser1.MulopContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace AnalizadorSintactico
